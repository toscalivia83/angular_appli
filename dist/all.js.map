{"version":3,"sources":["app.js","button/button.js","comment/comment.js","numPosteDA/numPosteDA.js","adresseIPSopra/adresseIPSopra.js","user/user.js","type-problem/type-problem.js","type-duree/type-duree.js","general_config.js","messages_config.js","ProblemsController.js","ProblemsService.js","ProblemsTypeService.js","TimeService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["(function () {\n  'use strict'\n\n  angular.module('ProblemsTest', [])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myButton', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          onclick: '=onclick',\n          label: '@btnLabel'\n        },\n        templateUrl: '/component/button/button.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myComment', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          comment: '=enterNewComment'\n        },\n        templateUrl: '/component/comment/comment.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myNumPosteDa', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          numPosteDa: '=enterNumPosteda'\n        },\n        templateUrl: '/component/numPosteDA/numPosteDA.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myAdresseIpSopra', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          adresseIPSopra: '=enterAdressIpsopra'\n        },\n        templateUrl: '/component/adresseIPSopra/adresseIPSopra.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myUser', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          user: '=enterUser'\n        },\n        templateUrl: '/component/user/user.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myProblems', ['configMessages', function (configMessages) {\n    return {\n      restrict: 'E',\n      scope: {\n        problems: '=problemsType',\n        ondatachange: '=ondatachange',\n        itemId: '=idvalue'\n      },\n      templateUrl: '/component/type-problem/type-problem.html'\n    }\n  }])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myDuree', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          duration: '=problemsTypeDuree',\n          setvalue: '=setvalue'\n        },\n        controller: ['$scope', 'TimeService', function ($scope, TimeService) {\n          $scope.setvalue = function (duration) {\n            $scope.unit = TimeService.getTimeUnit(duration)\n            $scope.displaytime = TimeService.computeDisplayTime(duration, $scope.unit)\n          }\n\n          $scope.computetime = function () {\n            $scope.duration = TimeService.convertInMs($scope.displaytime, $scope.unit)\n            return $scope.duration\n          }\n\n          $scope.checknumber = function (e) {\n            if (!TimeService.keyisvalid(e.key)) {\n              e.preventDefault()\n            }\n          }\n        }],\n        templateUrl: '/component/type-duree/type-duree.html'\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configConnexionServer = {\n    port: '8080',\n    server: 'localhost'\n  }\n\n  module.constant('serverConnexion', configConnexionServer)\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configMessages = {\n    problems: 'problems',\n    typeProbleme: 'typeProbleme',\n    repeatProblems: 'x in problems',\n    valueProblem: '{{x.typeProblems}}',\n    valueDuree: '{{x.duree}}'\n  }\n\n  module.constant('configMessages', configMessages)\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.controller('ProblemsController', [\n    '$scope',\n    'ProblemsService',\n    'ProblemsTypeService',\n    function ($scope, ProblemsService, ProblemsTypeService) {\n      var initialValue = 20\n      $scope.problemType\n      $scope.duration\n      $scope.comment\n      $scope.problemId\n      $scope.comment\n      $scope.user\n      $scope.numPosteDa\n      $scope.adresseIPSopra\n      $scope.problems = []\n      $scope.date = Date.now()\n\n      ProblemsTypeService.getProblems().then(function (problems) {\n        $scope.problems = problems\n        $scope.problemIndex = initialValue\n        $scope.problemType = $scope.problems[initialValue].typeProbleme\n        $scope.duration = $scope.problems[initialValue].duree\n        $scope.setduration($scope.duration)\n        $scope.comment = ''\n        $scope.user = ''\n        $scope.numPosteDa = ''\n        $scope.adresseIPSopra = '172.50.3.54'\n      })\n      .catch(function (err) {\n        alert('Erreur')\n        console.log(err)\n      })\n\n      $scope.ontypechange = function (type) {\n        $scope.problemType = type.typeProbleme\n        $scope.duration = type.duree\n        $scope.setduration($scope.duration)\n      }\n\n      $scope.onsubmit = function () {\n        var objectToSend = {\n          typeProbleme: $scope.problemType,\n          duree: $scope.duration,\n          commentaire: $scope.comment,\n          user: $scope.user,\n          numPosteDA: $scope.numPosteDa,\n          adresseIPSopra: $scope.adresseIPSopra,\n          date: $scope.date\n        }\n        ProblemsService.createProblem(objectToSend)\n        .then(function (problems) {\n          alert('Well inserted')\n        })\n        .catch(function (err) {\n          alert('Erreur')\n          console.log(err)\n        })\n      }\n    }\n  ])\n})();// eslint-disable-line semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.service('ProblemsService', [\n    '$q',\n    '$http',\n    'serverConnexion',\n    function ($q, $http, serverConnexion) {\n      var ressourceNameCreateProblem = 'problems'\n      var apiUrlCreateProblems = 'http://' + serverConnexion.server + ':' + serverConnexion.port + '/' + ressourceNameCreateProblem\n\n      this.createProblem = function (data) {\n        var deferred = $q.defer()\n        $http.post(apiUrlCreateProblems, data)\n          .then(function (httpInfo) {\n            deferred.resolve(httpInfo.data)\n          })\n          .catch(function (err) {\n            deferred.reject(err)\n          })\n        return deferred.promise\n      }\n    }\n  ])\n})();// eslint-disable-line no-alert, quotes, semi\n\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.service('ProblemsTypeService', [\n    '$q',\n    '$http',\n    'serverConnexion',\n    function ($q, $http, serverConnexion) {\n      var ressourceNameGetProblems = 'problemsTypes'\n      var apiUrlGetProblems = 'http://' + serverConnexion.server + ':' + serverConnexion.port + '/' + ressourceNameGetProblems\n      this.getProblems = function () {\n        var deferred = $q.defer()\n        $http.get(apiUrlGetProblems)\n          .then(function (httpInfo) {\n            deferred.resolve(httpInfo.data)\n          })\n          .catch(function (err) {\n            deferred.reject(err)\n          })\n        return deferred.promise\n      }\n    }\n  ])\n})();// eslint-disable-line no-alert, quotes, semi\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configUnitTime = {\n    seconds: 's',\n    minutes: 'm',\n    hours: 'h'\n  }\n\n  module.service('TimeService',\n    function () {\n      this.getTimeUnit = function (duration) {\n        var unit\n        var invalidDuration = 'Duration is invalid'\n        if (!duration) {\n          throw invalidDuration\n        }\n\n        if (duration < 59999) {\n          unit = configUnitTime.seconds\n        } else if (duration < 3599999) {\n          unit = configUnitTime.minutes\n        } else {\n          unit = configUnitTime.hours\n        }\n        return unit\n      }\n\n      this.computeDisplayTime = function (duration, unit) {\n        var displaytime\n        var unknowUnit = 'Unknown unit'\n        switch (unit) {\n          case configUnitTime.seconds :\n            displaytime = Math.ceil(duration / 1000)\n            break\n          case configUnitTime.minutes :\n            displaytime = Math.ceil(duration / 60000)\n            break\n          case configUnitTime.hours :\n            displaytime = Math.ceil(duration / 3600000)\n            break\n          default :\n            throw unknowUnit\n        }\n        return displaytime\n      }\n\n      this.convertInMs = function (displaytime, unit) {\n        var duration\n        var unknownUnit = 'Unknown unit'\n        switch (unit) {\n          case configUnitTime.seconds :\n            duration = displaytime * 1000\n            break\n          case configUnitTime.minutes :\n            duration = displaytime * 60000\n            break\n          case configUnitTime.hours :\n            duration = displaytime * 3600000\n            break\n          default :\n            throw unknownUnit\n        }\n        return duration\n      }\n\n      this.keyisvalid = function (key) {\n        var numbers = '0123456789'\n        if (numbers.indexOf(key) !== -1 || key === 'Backspace') {\n          return true\n        } else {\n          return false\n        }\n      }\n    })\n})();// eslint-disable-line no-alert, quotes, semi\n"],"sourceRoot":"/source/"}