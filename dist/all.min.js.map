{"version":3,"sources":["app.js","type-duree/type-duree.js","type-problem/type-problem.js","general_config.js","messages_config.js","ProblemsController.js","ProblemsService.js","TimeService.js"],"names":["angular","module","directive","restrict","scope","duration","setvalue","controller","$scope","TimeService","unit","getTimeUnit","displaytime","computeDisplayTime","computetime","convertInMs","checknumber","e","keyisvalid","key","preventDefault","templateUrl","configMessages","problems","ondatachange","itemId","configConnexionServer","port","server","constant","typeProbleme","repeatProblems","valueProblem","valueDuree","ProblemsService","initialValue","problemType","comment","problemId","getProblems","then","problemIndex","duree","setduration","err","alert","console","log","ontypechange","type","typeProblem","service","$q","$http","serverConnexion","ressourceName","apiUrl","this","deferred","defer","get","httpInfo","resolve","data","reject","promise","configUnitTime","seconds","minutes","hours","invalidDuration","unknowUnit","Math","ceil","unknownUnit","numbers","indexOf"],"mappings":"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","file":"all.min.js","sourcesContent":["(function () {\n  'use strict'\n\n  var app = angular.module('ProblemsTest', [])\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myDuree', [\n    function () {\n      return {\n        restrict: 'E',\n        scope: {\n          duration: '=problemsTypeDuree',\n          setvalue: '=setvalue'\n        },\n        controller: ['$scope', 'TimeService', function ($scope, TimeService) {\n          $scope.setvalue = function (duration) {\n            $scope.unit = TimeService.getTimeUnit(duration)\n            $scope.displaytime = TimeService.computeDisplayTime(duration, $scope.unit)\n          }\n\n          $scope.computetime = function () {\n            $scope.duration = TimeService.convertInMs($scope.displaytime, $scope.unit)\n            return $scope.duration\n          }\n\n          $scope.checknumber = function (e) {\n            if (!TimeService.keyisvalid(e.key)) {\n              e.preventDefault()\n            }\n          }\n        }],\n        templateUrl: '/component/type-duree/type-duree.html'\n      }\n    }\n  ])\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.directive('myProblems', ['configMessages', function (configMessages) {\n    return {\n      restrict: 'E',\n      scope: {\n        problems: '=problemsType',\n        ondatachange: '=ondatachange',\n        itemId: '=idvalue'\n      },\n      templateUrl: '/component/type-problem/type-problem.html'\n    }\n  }])\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configConnexionServer = {\n    port: '8080',\n    server: 'localhost'\n  }\n\n  angular.module('ProblemsTest').constant('serverConnexion', configConnexionServer)\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configMessages = {\n    problems: 'problems',\n    typeProbleme: 'typeProbleme',\n    repeatProblems: 'x in problems',\n    valueProblem: '{{x.typeProblems}}',\n    valueDuree: '{{x.duree}}'\n  }\n\n\tangular.module('ProblemsTest').constant('configMessages', configMessages)\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.controller('ProblemsController', [\n    '$scope',\n    'ProblemsService',\n    function ($scope, ProblemsService) {\n      var initialValue = 20\n      $scope.problemType\n      $scope.duration\n      $scope.comment\n      $scope.problemId\n      $scope.problems = []\n\n      ProblemsService.getProblems()\n\t\t\t\t.then(function (problems) {\n  $scope.problems = problems\n  $scope.problemIndex = initialValue\n  $scope.problemType = $scope.problems[initialValue].typeProbleme\n  $scope.duration = $scope.problems[initialValue].duree\n  $scope.setduration($scope.duration)\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n  alert('Erreur')\n  console.log(err)\n\t\t\t\t})\n\n      $scope.ontypechange = function (type) {\n        $scope.problemType = type.typeProblem\n        $scope.duration = type.duree\n        $scope.setduration($scope.duration)\n      }\n\n      /* $scope.onsubmit = function () {\n        var objectToSend = {\n          type: $scope.problemType,\n          duration: $scope.duration,\n          comment: $scope.comment\n          //date: $scope.date\n        }\n\n\t\t\t\t// Call SERVICE to create problem\n\t\t\t}*/\n    }\n  ])\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  module.service('ProblemsService', [\n    '$q',\n    '$http',\n    'serverConnexion',\n    function ($q, $http, serverConnexion) {\n      var ressourceName = 'problemsTypes'\n      var apiUrl = 'http://' + serverConnexion.server + ':' + serverConnexion.port + '/' + ressourceName\n      this.getProblems = function () {\n        var deferred = $q.defer()\n        $http.get(apiUrl)\n          .then(function (httpInfo) {\n            deferred.resolve(httpInfo.data)\n          })\n          .catch(function (err) {\n            deferred.reject(err)\n          })\n        return deferred.promise\n      }\n    }\n  ])\n})()\n","(function () {\n  'use strict'\n  var module = angular.module('ProblemsTest')\n\n  var configUnitTime = {\n    seconds: 's',\n    minutes: 'm',\n    hours: 'h'\n  }\n\n  module.service('TimeService',\n    function () {\n      this.getTimeUnit = function (duration) {\n        var unit\n        var invalidDuration = 'Duration is invalid'\n        if (!duration) {\n          throw invalidDuration\n        }\n\n        if (duration < 59999) {\n          unit = configUnitTime.seconds\n        } else if (duration < 3599999) {\n          unit = configUnitTime.minutes\n        } else {\n          unit = configUnitTime.hours\n        }\n        return unit\n      }\n\n      this.computeDisplayTime = function (duration, unit) {\n        var displaytime\n        var unknowUnit = 'Unknown unit'\n        switch (unit) {\n          case configUnitTime.seconds :\n            displaytime = Math.ceil(duration / 1000)\n            break\n          case configUnitTime.minutes :\n            displaytime = Math.ceil(duration / 60000)\n            break\n          case configUnitTime.hours :\n            displaytime = Math.ceil(duration / 3600000)\n            break\n          default :\n            throw unknowUnit\n        }\n        return displaytime\n      }\n\n      this.convertInMs = function (displaytime, unit) {\n        var duration\n        var unknownUnit = 'Unknown unit'\n        switch (unit) {\n          case configUnitTime.seconds :\n            duration = displaytime * 1000\n            break\n          case configUnitTime.minutes :\n            duration = displaytime * 60000\n            break\n          case configUnitTime.hours :\n            duration = displaytime * 3600000\n            break\n          default :\n            throw unknownUnit\n        }\n        return duration\n      }\n\n      this.keyisvalid = function (key) {\n        var numbers = '0123456789'\n        if (numbers.indexOf(key) !== -1 || key === 'Backspace') {\n          return true\n        } else {\n          return false\n        }\n      }\n    })\n})()\n"],"sourceRoot":"/source/"}